# docker-compose.yml

services:
  db:
    image: postgres:15-alpine
    env_file: .env
    restart: always
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks: [backend]
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER:-postgres}"]
      interval: 5s
      timeout: 3s
      retries: 5

  auth:
    build: ./services/auth_service
    depends_on:
      db:
        condition: service_healthy
    env_file: .env
    secrets:
      - auth_secret_key
    networks: [backend]
    restart: unless-stopped
    labels:
      - traefik.enable=true
      - traefik.http.routers.auth.rule=Host(`auth.${DOMAIN}`)
      - traefik.http.routers.auth.entrypoints=websecure
      - traefik.http.routers.auth.tls.certresolver=le
      - traefik.http.services.auth.loadbalancer.server.port=8000
    # ↓ facultatif : port local 8000 pour debug hors-Traefik
    ports:
      - "8000:8000"

  # --------------------- Traefik reverse-proxy
  reverse-proxy:
    container_name: reverse-proxy
    image: traefik:v3.0
    command:
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"

      # Entrypoints publics
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"

      # ACME (TLS-ALPN-01) via Let’s Encrypt
      - "--certificatesresolvers.le.acme.tlschallenge=true"
      - "--certificatesresolvers.le.acme.email=${LE_EMAIL}"
      - "--certificatesresolvers.le.acme.storage=/letsencrypt/acme.json"

      # ---- DEBUG / API ----
      - "--api.dashboard=true"      # dashboard HTML
      - "--api.insecure=true"       # (temporaire) expo sans auth sur 8080
      - "--log.level=INFO"

    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"                 # <- port de l’API/dashboard
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "letsencrypt:/letsencrypt"
    networks: [ backend ]
    restart: always

networks:
  backend:

volumes:
  pgdata:
  letsencrypt:

secrets:
  auth_secret_key:
    # on lit la clé depuis un fichier (non-commit ; ajouté par Ansible/CI)
    file: ./secrets/SECRET_KEY
